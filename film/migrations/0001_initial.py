# Generated by Django 2.0.5 on 2018-06-17 16:36

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('person', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='类型')),
            ],
            options={
                'verbose_name': '电影类型',
                'verbose_name_plural': '电影类型',
            },
        ),
        migrations.CreateModel(
            name='Honor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='奖项')),
                ('result', models.CharField(choices=[(1, '获奖'), (2, '提名')], max_length=255, verbose_name='结果')),
            ],
            options={
                'verbose_name': '电影奖',
                'verbose_name_plural': '电影奖',
            },
        ),
        migrations.CreateModel(
            name='HonorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='名称')),
            ],
            options={
                'verbose_name': '电影奖',
                'verbose_name_plural': '电影奖',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='电影名')),
                ('ename', models.CharField(max_length=255, verbose_name='英文名')),
                ('yiming', models.CharField(max_length=255, verbose_name='译名')),
                ('jianjie', models.TextField(verbose_name='简介')),
                ('juqing', models.TextField(verbose_name='剧情')),
                ('daoyan', models.CharField(max_length=255, verbose_name='导演')),
                ('bianju', models.CharField(max_length=255, verbose_name='编剧')),
                ('chupingongsi', models.CharField(max_length=255, verbose_name='出品公司')),
                ('zhipiangongsi', models.CharField(max_length=255, verbose_name='制片公司')),
                ('shichang', models.CharField(max_length=255, verbose_name='时长')),
                ('zhipiandiqu', models.CharField(max_length=255, verbose_name='制片地区')),
                ('chengben', models.CharField(max_length=255, verbose_name='制片成本')),
                ('shangying', models.CharField(max_length=255, verbose_name='上映时间')),
                ('paishedi', models.CharField(max_length=255, verbose_name='拍摄地点')),
                ('duibai', models.CharField(max_length=255, verbose_name='对白语言')),
                ('paisheriqi', models.CharField(max_length=255, verbose_name='拍摄日期')),
                ('secai', models.CharField(max_length=255, verbose_name='色彩')),
                ('imdb', models.CharField(max_length=255, verbose_name='IMDB编码')),
                ('add_time', models.DateField(default=datetime.datetime.now, verbose_name='收录时间')),
                ('misuc', models.CharField(max_length=255, verbose_name='电影原声')),
                ('category', models.ManyToManyField(to='film.Category', verbose_name='类型')),
                ('yanyuan', models.ManyToManyField(to='person.Info', verbose_name='演员')),
            ],
            options={
                'verbose_name': '电影',
                'verbose_name_plural': '电影',
            },
        ),
        migrations.CreateModel(
            name='PiaoFang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.DateField(verbose_name='收入')),
                ('address', models.CharField(max_length=255, verbose_name='国家/地区')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Info', verbose_name='所属电影')),
            ],
            options={
                'verbose_name': '票房',
                'verbose_name_plural': '票房',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='角色名')),
                ('desc', models.TextField(verbose_name='角色描述')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Info', verbose_name='所属电影')),
                ('yanyuan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='person.Info', verbose_name='扮演者')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
            },
        ),
        migrations.CreateModel(
            name='Show',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateField(max_length=255, verbose_name='上映时间')),
                ('address', models.CharField(max_length=255, verbose_name='国家/地区')),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.Info', verbose_name='所属电影')),
            ],
            options={
                'verbose_name': '上映时间',
                'verbose_name_plural': '上映时间',
            },
        ),
        migrations.AddField(
            model_name='honor',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='film.HonorCategory', verbose_name='所属奖'),
        ),
        migrations.AddField(
            model_name='honor',
            name='person',
            field=models.ManyToManyField(to='person.Info', verbose_name='获奖者'),
        ),
    ]
